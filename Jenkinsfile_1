pipeline{
    agent{
        node{
            label 'docker'
        }
    }

    options{
        timestamps()
    }
    
    environment{
        IMAGE = readMavenPom().getArtifactId()
        VERSION = readMavenPom().getVersion()
    }

    stages{
        stage("Build"){
        agent{
            docker{
                reuseNode true
                image 'maven:3.5.0-jdk-8'
            }
        }        
        }
        post{
            success{
                archiveArtifacts(artifacts: '**/target/*.jar', allowEmptyArchive: true)
            }
        }

        stage('Quality Analysis'){
            parallel{
                stage('Integration Test'){
                    agent any
                    steps{
                        echo "Run integration test here"
                    }
                }

                stage('Sonar Scan'){
                    agent{
                        docker{
                            reuseNode true
                            image 'maven:3.5.0-jdk-8'
                        }
                    }
                    environment{
                        SONAR = credentials('sonar')
                    }
                    steps{
                        sh 'mvn sonar:sonar -D sonar.login=$SONAR_PSW'
                    }
                }
            }
        }

        stage('Build and Publish Image'){
            when{
                branch master
            }
            steps{
                sh """
                docker build -t ${IMAGE} .
                docker tag ${IMAGE} ${IMAGE}:${VERSION}
                docker push ${IMAGE}:${VERSION}
                """
            }
        }
    }

    post{
        failure{
            mail to: 'nikhilbuddhe1212@gmail.com'
            subject: "Failed pipeline: ${currentBuild.fullDisplayName}",
            body: "Something is wrong with ${env.BUILD_URL}"
        }
    }
}